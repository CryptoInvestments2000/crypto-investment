# Generated by Django 3.2.20 on 2023-07-27 09:29

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_interest_calculation', models.DateField(default=datetime.date.today)),
                ('company_usdt_address', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'verbose_name': 'Settings',
                'verbose_name_plural': 'Settings',
            },
        ),
        migrations.CreateModel(
            name='UpgradeRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trans_id', models.CharField(max_length=100, unique=True)),
                ('username', models.CharField(max_length=15)),
                ('request_date', models.DateField(default=datetime.date.today)),
                ('membership', models.CharField(max_length=15)),
                ('due_amount', models.BigIntegerField(default=0)),
                ('upgraded', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Upgrade Request',
                'verbose_name_plural': 'Upgrade Requests',
            },
        ),
        migrations.CreateModel(
            name='WithdrawDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trans_id', models.CharField(max_length=200, unique=True)),
                ('trans_date', models.DateField()),
                ('username', models.CharField(blank=True, max_length=200)),
                ('amount', models.BigIntegerField(default=0)),
                ('usdt_address', models.CharField(default='None', max_length=200)),
                ('paid', models.BooleanField(default=False)),
                ('paid_date', models.DateField(default=datetime.date.today)),
            ],
            options={
                'verbose_name': 'Withdraw Detail',
                'verbose_name_plural': 'Withdraw Details',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('introducer', models.CharField(blank=True, max_length=200)),
                ('referrel_code', models.CharField(blank=True, max_length=10)),
                ('membership', models.CharField(blank=True, choices=[('None', 'None'), ('Bronze', 'Bronze'), ('Silver', 'Silver'), ('Gold', 'Gold'), ('Platinum', 'Platinum'), ('Diamond', 'Diamond')], default='None', max_length=10)),
                ('budget', models.BigIntegerField(default=0)),
                ('balance', models.BigIntegerField(default=0)),
                ('total_withdrawals', models.BigIntegerField(default=0)),
                ('total_earnings', models.BigIntegerField(default=0)),
                ('daily_income', models.BigIntegerField(default=0)),
                ('level1_com', models.BigIntegerField(default=0)),
                ('level2_com', models.BigIntegerField(default=0)),
                ('level3_com', models.BigIntegerField(default=0)),
                ('usdt_address', models.CharField(blank=True, max_length=200)),
                ('date_upgraded', models.DateField(default=datetime.date.today)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Member',
                'verbose_name_plural': 'Members',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
